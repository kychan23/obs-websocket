name: OBS Livestream Control

on:
  workflow_dispatch:
    inputs:
      action:
        description: "Start or Stop the livestream"
        required: true
        default: "start"
        type: choice
        options:
          - start
          - stop

jobs:
  obs-control:
    runs-on: self-hosted

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install obs-websocket-py
        run: pip install obs-websocket-py

      - name: Control OBS
        env:
          OBS_HOST: 'localhost'
          OBS_PORT: '4455'
          OBS_PASSWORD: ${{ secrets.OBS_PASSWORD }}
          ACTION: ${{ github.event.inputs.action }}
        run: |
          python3 <<EOF
          from obswebsocket import obsws, requests
          import os

          host = os.environ.get('OBS_HOST')
          port = int(os.environ.get('OBS_PORT'))
          password = os.environ.get('OBS_PASSWORD')
          action = os.environ.get('ACTION')

          ws = obsws(host, port, password)
          ws.connect()

          if action == "start":
              print("Starting stream...")
              ws.call(requests.StartStream())
          elif action == "stop":
              print("Stopping stream...")
              ws.call(requests.StopStream())
          else:
              raise ValueError("Invalid action: " + action)

          ws.disconnect()
          EOF
